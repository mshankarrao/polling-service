buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE")
    }
}


group 'net.technocart'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'

bootJar{
    baseName = project.name
    version = "${getVersionName()}"
    project.version=version
}

println bootJar.version

repositories {
    mavenCentral()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact file("build/libs/${bootJar.baseName}-${bootJar.version}.jar")

        }
    }
    repositories {
        maven {
            url "/Users/shankarraomata/Documents/repository"
        }
    }
}
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.jayway.jsonpath:json-path')
}


//method for getting the gitversion
def getVersionName(){
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

compileJava.doFirst { println 'This will be invoked right after the compileJava task is done'}


